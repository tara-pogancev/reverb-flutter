///
/// Generated file. Do not edit.
///
// coverage:ignore-file
// ignore_for_file: type=lint, unused_import

import 'package:flutter/widgets.dart';
import 'package:intl/intl.dart';
import 'package:slang/generated.dart';
import 'strings.g.dart';

// Path: <root>
class TranslationsHi implements Translations {
	/// You can call this constructor and build your own translation instance of this locale.
	/// Constructing via the enum [AppLocale.build] is preferred.
	TranslationsHi({Map<String, Node>? overrides, PluralResolver? cardinalResolver, PluralResolver? ordinalResolver, TranslationMetadata<AppLocale, Translations>? meta})
		: assert(overrides == null, 'Set "translation_overrides: true" in order to enable this feature.'),
		  $meta = meta ?? TranslationMetadata(
		    locale: AppLocale.hi,
		    overrides: overrides ?? {},
		    cardinalResolver: cardinalResolver,
		    ordinalResolver: ordinalResolver,
		  ) {
		$meta.setFlatMapFunction(_flatMapFunction);
	}

	/// Metadata for the translations of <hi>.
	@override final TranslationMetadata<AppLocale, Translations> $meta;

	/// Access flat map
	@override dynamic operator[](String key) => $meta.getTranslation(key);

	late final TranslationsHi _root = this; // ignore: unused_field

	@override 
	TranslationsHi $copyWith({TranslationMetadata<AppLocale, Translations>? meta}) => TranslationsHi(meta: meta ?? this.$meta);

	// Translations
	@override late final _TranslationsGeneralHi general = _TranslationsGeneralHi._(_root);
	@override late final _TranslationsBottomBarHi bottomBar = _TranslationsBottomBarHi._(_root);
	@override late final _TranslationsErrorHi error = _TranslationsErrorHi._(_root);
	@override late final _TranslationsSongListHi songList = _TranslationsSongListHi._(_root);
	@override late final _TranslationsPlayerHi player = _TranslationsPlayerHi._(_root);
	@override late final _TranslationsAudioEffectsHi audioEffects = _TranslationsAudioEffectsHi._(_root);
	@override late final _TranslationsSearchHi search = _TranslationsSearchHi._(_root);
	@override late final _TranslationsArtistsHi artists = _TranslationsArtistsHi._(_root);
	@override late final _TranslationsPlaylistsHi playlists = _TranslationsPlaylistsHi._(_root);
	@override late final _TranslationsSettingsHi settings = _TranslationsSettingsHi._(_root);
}

// Path: general
class _TranslationsGeneralHi implements TranslationsGeneralEn {
	_TranslationsGeneralHi._(this._root);

	final TranslationsHi _root; // ignore: unused_field

	// Translations
	@override String get appName => 'Reverb';
	@override String get cancel => '‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç';
	@override String get ok => '‡§†‡•Ä‡§ï ‡§π‡•à';
	@override String get confirm => '‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡•á‡§Ç';
	@override String get save => '‡§∏‡§π‡•á‡§ú‡•á‡§Ç';
	@override String get comingSoon => '‡§´‡§º‡•Ä‡§ö‡§∞ ‡§ú‡§≤‡•ç‡§¶ ‡§π‡•Ä ‡§Ü ‡§∞‡§π‡§æ ‡§π‡•à! üéâ';
	@override String get viewAll => '‡§∏‡§≠‡•Ä ‡§¶‡•á‡§ñ‡•á‡§Ç';
	@override String get addNew => '‡§®‡§Ø‡§æ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç';
	@override String get createNew => '‡§®‡§Ø‡§æ ‡§¨‡§®‡§æ‡§è‡§Ç';
	@override String get upload => '‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç';
	@override String get close => '‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡•á‡§Ç';
	@override String get next => '‡§Ö‡§ó‡§≤‡§æ';
	@override String get previous => '‡§™‡§ø‡§õ‡§≤‡§æ';
	@override String get add => '‡§ú‡•ã‡§°‡§º‡•á‡§Ç';
	@override String get remove => '‡§π‡§ü‡§æ‡§è‡§Ç';
	@override String get preview => '‡§™‡•Ç‡§∞‡•ç‡§µ‡§æ‡§µ‡§≤‡•ã‡§ï‡§®';
	@override String get retry => '‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç';
	@override String get refresh => '‡§§‡§æ‡§ú‡§º‡§æ ‡§ï‡§∞‡•á‡§Ç';
}

// Path: bottomBar
class _TranslationsBottomBarHi implements TranslationsBottomBarEn {
	_TranslationsBottomBarHi._(this._root);

	final TranslationsHi _root; // ignore: unused_field

	// Translations
	@override String get music => '‡§∏‡§Ç‡§ó‡•Ä‡§§';
	@override String get search => '‡§ñ‡•ã‡§ú‡•á‡§Ç';
	@override String get playlists => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü';
	@override String get artists => '‡§ï‡§≤‡§æ‡§ï‡§æ‡§∞';
}

// Path: error
class _TranslationsErrorHi implements TranslationsErrorEn {
	_TranslationsErrorHi._(this._root);

	final TranslationsHi _root; // ignore: unused_field

	// Translations
	@override String get generic => '‡§è‡§ï ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø ‡§π‡•Å‡§à';
	@override String get fetchingSongs => '‡§ó‡•Ä‡§§‡•ã‡§Ç ‡§ï‡•ã ‡§≤‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø.';
	@override String get fetchingPlaylists => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§≤‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø.';
	@override String get creatingPlaylist => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø.';
	@override String get errorAddingSongToPlaylist => '‡§ó‡•Ä‡§§ ‡§ï‡•ã ‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø';
}

// Path: songList
class _TranslationsSongListHi implements TranslationsSongListEn {
	_TranslationsSongListHi._(this._root);

	final TranslationsHi _root; // ignore: unused_field

	// Translations
	@override String get delete => '‡§Æ‡§ø‡§ü‡§æ‡§è‡§Ç';
	@override String get rename => '‡§®‡§æ‡§Æ ‡§¨‡§¶‡§≤‡•á‡§Ç';
	@override String get addToPlaylist => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡•á‡§Ç';
	@override String get addedToPlaylist => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ';
	@override String get removedFromPlaylist => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§∏‡•á ‡§π‡§ü‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ';
	@override String get addToQueue => '‡§ï‡§§‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡•á‡§Ç';
	@override String get addedToQueue => '‡§ï‡§§‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ';
	@override String get alreadyInQueue => '‡§ó‡•Ä‡§§ ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§π‡•Ä ‡§ï‡§§‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§π‡•à';
}

// Path: player
class _TranslationsPlayerHi implements TranslationsPlayerEn {
	_TranslationsPlayerHi._(this._root);

	final TranslationsHi _root; // ignore: unused_field

	// Translations
	@override String get unknownArtist => '‡§Ö‡§ú‡•ç‡§û‡§æ‡§§ ‡§ï‡§≤‡§æ‡§ï‡§æ‡§∞';
	@override String get permissionRequired => '‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§π‡•à!';
	@override String get pleaseEnableAppAccess => '‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡§Ç‡§ó‡•Ä‡§§ ‡§§‡§ï ‡§ê‡§™ ‡§ï‡•Ä ‡§™‡§π‡•Å‡§Ç‡§ö ‡§∏‡§ï‡•ç‡§∑‡§Æ ‡§ï‡§∞‡•á‡§Ç.';
	@override String get allowAccess => '‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§Ç';
	@override String get allowInSettings => '‡§Ø‡§¶‡§ø ‡§¨‡§ü‡§® ‡§Ü‡§™‡§ï‡•ã ‡§™‡§π‡•Å‡§Ç‡§ö ‡§¶‡•á‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§Ç‡§ï‡•á‡§§ ‡§®‡§π‡•Ä‡§Ç ‡§¶‡•á‡§§‡§æ ‡§π‡•à, ‡§§‡•ã ‡§ï‡•É‡§™‡§Ø‡§æ ‡§á‡§∏‡•á ‡§ê‡§™ ‡§ï‡•Ä ‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó ‡§Æ‡•á‡§Ç ‡§∏‡§ï‡•ç‡§∑‡§Æ ‡§ï‡§∞‡•á‡§Ç‡•§';
	@override String get noSongsAvailable => '‡§ï‡•ã‡§à ‡§ó‡•Ä‡§§ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡•§';
	@override String get nowPlaying => '‡§Ö‡§≠‡•Ä ‡§ö‡§≤ ‡§∞‡§π‡§æ ‡§π‡•à';
	@override String get nextInQueue => '‡§ï‡§§‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§Ö‡§ó‡§≤‡§æ';
	@override String get playingQueue => '‡§™‡•ç‡§≤‡•á‡§á‡§Ç‡§ó ‡§ï‡•ç‡§Ø‡•Ç';
	@override String get nothingInQueue => '‡§ï‡§§‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§ï‡•Å‡§õ ‡§®‡§π‡•Ä‡§Ç';
}

// Path: audioEffects
class _TranslationsAudioEffectsHi implements TranslationsAudioEffectsEn {
	_TranslationsAudioEffectsHi._(this._root);

	final TranslationsHi _root; // ignore: unused_field

	// Translations
	@override String get audioEffects => '‡§ë‡§°‡§ø‡§Ø‡•ã ‡§™‡•ç‡§∞‡§≠‡§æ‡§µ';
	@override String get on => '‡§ö‡§æ‡§≤‡•Ç';
	@override String get off => '‡§¨‡§Ç‡§¶';
	@override String get reverb => '‡§™‡•ç‡§∞‡§§‡§ø‡§ß‡•ç‡§µ‡§®‡§ø';
	@override String get echo => '‡§ó‡•Ç‡§Ç‡§ú';
	@override String get speedAndPitch => '‡§ó‡§§‡§ø + ‡§™‡§ø‡§ö';
}

// Path: search
class _TranslationsSearchHi implements TranslationsSearchEn {
	_TranslationsSearchHi._(this._root);

	final TranslationsHi _root; // ignore: unused_field

	// Translations
	@override String get search => '‡§ñ‡•ã‡§ú‡•á‡§Ç';
	@override String get hint => '‡§Ö‡§™‡§®‡§æ ‡§∏‡§Ç‡§ó‡•Ä‡§§ ‡§ñ‡•ã‡§ú‡•á‡§Ç...';
	@override String results({required Object n}) => '‡§™‡§∞‡§ø‡§£‡§æ‡§Æ (${n})';
	@override String get noSongs => '‡§ï‡•ã‡§à ‡§ó‡•Ä‡§§ ‡§®‡§π‡•Ä‡§Ç‡•§';
}

// Path: artists
class _TranslationsArtistsHi implements TranslationsArtistsEn {
	_TranslationsArtistsHi._(this._root);

	final TranslationsHi _root; // ignore: unused_field

	// Translations
	@override String artists({required Object n}) => '‡§ï‡§≤‡§æ‡§ï‡§æ‡§∞ (${n})';
	@override String get noArtists => '‡§ï‡•ã‡§à ‡§ï‡§≤‡§æ‡§ï‡§æ‡§∞ ‡§®‡§π‡•Ä‡§Ç‡•§';
	@override String songsAndAlbums({required Object tracks, required Object albums}) => '${tracks} ‡§ü‡•ç‡§∞‡•à‡§ï, ${albums} ‡§è‡§≤‡•ç‡§¨‡§Æ';
}

// Path: playlists
class _TranslationsPlaylistsHi implements TranslationsPlaylistsEn {
	_TranslationsPlaylistsHi._(this._root);

	final TranslationsHi _root; // ignore: unused_field

	// Translations
	@override String playlists({required Object n}) => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü (${n})';
	@override String tracks({required Object n}) => '‡§ü‡•ç‡§∞‡•à‡§ï (${n})';
	@override String get newPlaylist => '‡§®‡§à ‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü';
	@override String get manageSongs => '‡§ó‡§æ‡§®‡•á ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç';
	@override String get playlistName => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§ï‡§æ ‡§®‡§æ‡§Æ';
	@override String get noPlaylists => '‡§ï‡•ã‡§à ‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§®‡§π‡•Ä‡§Ç‡•§';
	@override String get addToPlaylist => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡•á‡§Ç';
	@override String get removeFromPlaylist => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§∏‡•á ‡§π‡§ü‡§æ‡§è‡§Ç';
	@override String get rename => '‡§®‡§æ‡§Æ ‡§¨‡§¶‡§≤‡•á‡§Ç';
	@override String get playlistRenamed => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§¨‡§¶‡§≤ ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ';
	@override String get deletePlaylist => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§π‡§ü‡§æ‡§è‡§Ç';
	@override String areYouSure({required Object name}) => '‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§∂‡•ç‡§Ø‡•ã‡§∞ ‡§π‡•à‡§Ç ‡§ï‡§ø ‡§Ü‡§™ \'${name}\' ‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§ï‡•ã ‡§π‡§ü‡§æ‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?';
	@override String get playlistDeleted => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§π‡§ü‡§æ‡§à ‡§ó‡§à';
	@override String get playlistCreated => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§¨‡§®‡§æ‡§à ‡§ó‡§à';
	@override String get noSongsInPlaylist => '‡§ñ‡§æ‡§≤‡•Ä ‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü, ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•Å‡§õ ‡§ó‡§æ‡§®‡•á ‡§ú‡•ã‡§°‡§º‡•á‡§Ç‡•§';
	@override String get songAlreadyInPlaylist => '‡§ó‡•Ä‡§§ ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§π‡•Ä ‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§π‡•à';
}

// Path: settings
class _TranslationsSettingsHi implements TranslationsSettingsEn {
	_TranslationsSettingsHi._(this._root);

	final TranslationsHi _root; // ignore: unused_field

	// Translations
	@override String get title => '‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏';
	@override String get language => '‡§≠‡§æ‡§∑‡§æ';
	@override String get darkTheme => '‡§°‡§æ‡§∞‡•ç‡§ï ‡§•‡•Ä‡§Æ';
	@override String get adjustAudio => '‡§ë‡§°‡§ø‡§Ø‡•ã ‡§™‡•ç‡§∞‡§≠‡§æ‡§µ ‡§∏‡§Æ‡§æ‡§Ø‡•ã‡§ú‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç';
}

/// Flat map(s) containing all translations.
/// Only for edge cases! For simple maps, use the map function of this library.
extension on TranslationsHi {
	dynamic _flatMapFunction(String path) {
		switch (path) {
			case 'general.appName': return 'Reverb';
			case 'general.cancel': return '‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç';
			case 'general.ok': return '‡§†‡•Ä‡§ï ‡§π‡•à';
			case 'general.confirm': return '‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡•á‡§Ç';
			case 'general.save': return '‡§∏‡§π‡•á‡§ú‡•á‡§Ç';
			case 'general.comingSoon': return '‡§´‡§º‡•Ä‡§ö‡§∞ ‡§ú‡§≤‡•ç‡§¶ ‡§π‡•Ä ‡§Ü ‡§∞‡§π‡§æ ‡§π‡•à! üéâ';
			case 'general.viewAll': return '‡§∏‡§≠‡•Ä ‡§¶‡•á‡§ñ‡•á‡§Ç';
			case 'general.addNew': return '‡§®‡§Ø‡§æ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç';
			case 'general.createNew': return '‡§®‡§Ø‡§æ ‡§¨‡§®‡§æ‡§è‡§Ç';
			case 'general.upload': return '‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç';
			case 'general.close': return '‡§¨‡§Ç‡§¶ ‡§ï‡§∞‡•á‡§Ç';
			case 'general.next': return '‡§Ö‡§ó‡§≤‡§æ';
			case 'general.previous': return '‡§™‡§ø‡§õ‡§≤‡§æ';
			case 'general.add': return '‡§ú‡•ã‡§°‡§º‡•á‡§Ç';
			case 'general.remove': return '‡§π‡§ü‡§æ‡§è‡§Ç';
			case 'general.preview': return '‡§™‡•Ç‡§∞‡•ç‡§µ‡§æ‡§µ‡§≤‡•ã‡§ï‡§®';
			case 'general.retry': return '‡§™‡•Å‡§®‡§É ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç';
			case 'general.refresh': return '‡§§‡§æ‡§ú‡§º‡§æ ‡§ï‡§∞‡•á‡§Ç';
			case 'bottomBar.music': return '‡§∏‡§Ç‡§ó‡•Ä‡§§';
			case 'bottomBar.search': return '‡§ñ‡•ã‡§ú‡•á‡§Ç';
			case 'bottomBar.playlists': return '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü';
			case 'bottomBar.artists': return '‡§ï‡§≤‡§æ‡§ï‡§æ‡§∞';
			case 'error.generic': return '‡§è‡§ï ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø ‡§π‡•Å‡§à';
			case 'error.fetchingSongs': return '‡§ó‡•Ä‡§§‡•ã‡§Ç ‡§ï‡•ã ‡§≤‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø.';
			case 'error.fetchingPlaylists': return '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§≤‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø.';
			case 'error.creatingPlaylist': return '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø.';
			case 'error.errorAddingSongToPlaylist': return '‡§ó‡•Ä‡§§ ‡§ï‡•ã ‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø';
			case 'songList.delete': return '‡§Æ‡§ø‡§ü‡§æ‡§è‡§Ç';
			case 'songList.rename': return '‡§®‡§æ‡§Æ ‡§¨‡§¶‡§≤‡•á‡§Ç';
			case 'songList.addToPlaylist': return '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡•á‡§Ç';
			case 'songList.addedToPlaylist': return '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ';
			case 'songList.removedFromPlaylist': return '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§∏‡•á ‡§π‡§ü‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ';
			case 'songList.addToQueue': return '‡§ï‡§§‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡•á‡§Ç';
			case 'songList.addedToQueue': return '‡§ï‡§§‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ';
			case 'songList.alreadyInQueue': return '‡§ó‡•Ä‡§§ ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§π‡•Ä ‡§ï‡§§‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§π‡•à';
			case 'player.unknownArtist': return '‡§Ö‡§ú‡•ç‡§û‡§æ‡§§ ‡§ï‡§≤‡§æ‡§ï‡§æ‡§∞';
			case 'player.permissionRequired': return '‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§π‡•à!';
			case 'player.pleaseEnableAppAccess': return '‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡§Ç‡§ó‡•Ä‡§§ ‡§§‡§ï ‡§ê‡§™ ‡§ï‡•Ä ‡§™‡§π‡•Å‡§Ç‡§ö ‡§∏‡§ï‡•ç‡§∑‡§Æ ‡§ï‡§∞‡•á‡§Ç.';
			case 'player.allowAccess': return '‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§Ç';
			case 'player.allowInSettings': return '‡§Ø‡§¶‡§ø ‡§¨‡§ü‡§® ‡§Ü‡§™‡§ï‡•ã ‡§™‡§π‡•Å‡§Ç‡§ö ‡§¶‡•á‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§Ç‡§ï‡•á‡§§ ‡§®‡§π‡•Ä‡§Ç ‡§¶‡•á‡§§‡§æ ‡§π‡•à, ‡§§‡•ã ‡§ï‡•É‡§™‡§Ø‡§æ ‡§á‡§∏‡•á ‡§ê‡§™ ‡§ï‡•Ä ‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó ‡§Æ‡•á‡§Ç ‡§∏‡§ï‡•ç‡§∑‡§Æ ‡§ï‡§∞‡•á‡§Ç‡•§';
			case 'player.noSongsAvailable': return '‡§ï‡•ã‡§à ‡§ó‡•Ä‡§§ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à‡•§';
			case 'player.nowPlaying': return '‡§Ö‡§≠‡•Ä ‡§ö‡§≤ ‡§∞‡§π‡§æ ‡§π‡•à';
			case 'player.nextInQueue': return '‡§ï‡§§‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§Ö‡§ó‡§≤‡§æ';
			case 'player.playingQueue': return '‡§™‡•ç‡§≤‡•á‡§á‡§Ç‡§ó ‡§ï‡•ç‡§Ø‡•Ç';
			case 'player.nothingInQueue': return '‡§ï‡§§‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§ï‡•Å‡§õ ‡§®‡§π‡•Ä‡§Ç';
			case 'audioEffects.audioEffects': return '‡§ë‡§°‡§ø‡§Ø‡•ã ‡§™‡•ç‡§∞‡§≠‡§æ‡§µ';
			case 'audioEffects.on': return '‡§ö‡§æ‡§≤‡•Ç';
			case 'audioEffects.off': return '‡§¨‡§Ç‡§¶';
			case 'audioEffects.reverb': return '‡§™‡•ç‡§∞‡§§‡§ø‡§ß‡•ç‡§µ‡§®‡§ø';
			case 'audioEffects.echo': return '‡§ó‡•Ç‡§Ç‡§ú';
			case 'audioEffects.speedAndPitch': return '‡§ó‡§§‡§ø + ‡§™‡§ø‡§ö';
			case 'search.search': return '‡§ñ‡•ã‡§ú‡•á‡§Ç';
			case 'search.hint': return '‡§Ö‡§™‡§®‡§æ ‡§∏‡§Ç‡§ó‡•Ä‡§§ ‡§ñ‡•ã‡§ú‡•á‡§Ç...';
			case 'search.results': return ({required Object n}) => '‡§™‡§∞‡§ø‡§£‡§æ‡§Æ (${n})';
			case 'search.noSongs': return '‡§ï‡•ã‡§à ‡§ó‡•Ä‡§§ ‡§®‡§π‡•Ä‡§Ç‡•§';
			case 'artists.artists': return ({required Object n}) => '‡§ï‡§≤‡§æ‡§ï‡§æ‡§∞ (${n})';
			case 'artists.noArtists': return '‡§ï‡•ã‡§à ‡§ï‡§≤‡§æ‡§ï‡§æ‡§∞ ‡§®‡§π‡•Ä‡§Ç‡•§';
			case 'artists.songsAndAlbums': return ({required Object tracks, required Object albums}) => '${tracks} ‡§ü‡•ç‡§∞‡•à‡§ï, ${albums} ‡§è‡§≤‡•ç‡§¨‡§Æ';
			case 'playlists.playlists': return ({required Object n}) => '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü (${n})';
			case 'playlists.tracks': return ({required Object n}) => '‡§ü‡•ç‡§∞‡•à‡§ï (${n})';
			case 'playlists.newPlaylist': return '‡§®‡§à ‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü';
			case 'playlists.manageSongs': return '‡§ó‡§æ‡§®‡•á ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç';
			case 'playlists.playlistName': return '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§ï‡§æ ‡§®‡§æ‡§Æ';
			case 'playlists.noPlaylists': return '‡§ï‡•ã‡§à ‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§®‡§π‡•Ä‡§Ç‡•§';
			case 'playlists.addToPlaylist': return '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡•á‡§Ç';
			case 'playlists.removeFromPlaylist': return '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§∏‡•á ‡§π‡§ü‡§æ‡§è‡§Ç';
			case 'playlists.rename': return '‡§®‡§æ‡§Æ ‡§¨‡§¶‡§≤‡•á‡§Ç';
			case 'playlists.playlistRenamed': return '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§¨‡§¶‡§≤ ‡§¶‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ';
			case 'playlists.deletePlaylist': return '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§π‡§ü‡§æ‡§è‡§Ç';
			case 'playlists.areYouSure': return ({required Object name}) => '‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§∂‡•ç‡§Ø‡•ã‡§∞ ‡§π‡•à‡§Ç ‡§ï‡§ø ‡§Ü‡§™ \'${name}\' ‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§ï‡•ã ‡§π‡§ü‡§æ‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?';
			case 'playlists.playlistDeleted': return '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§π‡§ü‡§æ‡§à ‡§ó‡§à';
			case 'playlists.playlistCreated': return '‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§¨‡§®‡§æ‡§à ‡§ó‡§à';
			case 'playlists.noSongsInPlaylist': return '‡§ñ‡§æ‡§≤‡•Ä ‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü, ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•Å‡§õ ‡§ó‡§æ‡§®‡•á ‡§ú‡•ã‡§°‡§º‡•á‡§Ç‡•§';
			case 'playlists.songAlreadyInPlaylist': return '‡§ó‡•Ä‡§§ ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§π‡•Ä ‡§™‡•ç‡§≤‡•á‡§≤‡§ø‡§∏‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§π‡•à';
			case 'settings.title': return '‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏';
			case 'settings.language': return '‡§≠‡§æ‡§∑‡§æ';
			case 'settings.darkTheme': return '‡§°‡§æ‡§∞‡•ç‡§ï ‡§•‡•Ä‡§Æ';
			case 'settings.adjustAudio': return '‡§ë‡§°‡§ø‡§Ø‡•ã ‡§™‡•ç‡§∞‡§≠‡§æ‡§µ ‡§∏‡§Æ‡§æ‡§Ø‡•ã‡§ú‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç';
			default: return null;
		}
	}
}

